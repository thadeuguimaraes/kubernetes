apiVersion: apps/v1
kind: Deployment 
metadata:
  name: nginx
spec:
  # replicas: 18
  selector:
    matchLabels:
      app: nginx
  template:
    metadata:
      labels:
        app: nginx
    spec:
      # initContainers:
      #   - name: init 
      #     image: kubedevio/ubuntu-curl:v1
      #     command: ["curl", "-X", "POST", "http://pruu.herokuapp.com/dump/initcontainer"]
      containers:
        - name: nginx
          image: nginx
          # lifecycle:
            # postStart:
            #   exec:
            #     command: ["curl", "-X", "POST", "http://pruu.herokuapp.com/dump/lifecyclestart"]
            # preStop:
            #   exec:
            #     command: ["curl", "-X", "POST", "http://pruu.herokuapp.com/dump/lifecyclestop"]
          resources:
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
spec:
  selector:
    app: nginx
  ports:
  - port: 80
    targetPort: 80

      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #         - matchExpressions:
      #           - key: prioridade
      #             operator: Exists
      #     preferredDuringSchedulingIgnoredDuringExecution:
      #     - weight: 1
      #       preference:
      #         matchExpressions:
      #         - key: prioridade
      #           operator: In
      #           values:
      #             - "1"
                    



# # Outros modos de deploy usando StatefulSet

# # apiVersion: apps/v1
# # kind: StatefulSet
# # metadata:
# #   name: nginx-state
# # spec:
# #   serviceName: nginx-state
# #   replicas: 4
# #   selector:
# #     matchLabels:
# #       app: nginx
# #   template:
# #     metadata:
# #       labels:
# #         app: nginx
# #     spec:
# #       initContainers:
# #         - name: volume-page
# #           image: busybox
# #           command: ['sh', '-c', 'echo $(hostname) > /usr/share/nginx/html/index.html']
# #           volumeMounts:
# #           - mountPath: /usr/share/nginx/html
# #             name: www
# #       containers:
# #       - name: nginx
# #         image: nginx
# #         ports:
# #         - containerPort: 80
# #           name: web
# #         volumeMounts:
# #         - name: www
# #           mountPath: /usr/share/nginx/html
# #   volumeClaimTemplates:
# #     - metadata:
# #         name: www
# #       spec:
# #         accessModes:
# #           - "ReadWriteOnce"
# #         storageClassName: "standard"
# #         resources:
# #           requests:
# #             storage: 1Gi